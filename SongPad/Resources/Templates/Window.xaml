<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:behaviors="clr-namespace:SongPad.Resources.Behaviors"
					xmlns:commands="clr-namespace:SongPad.Resources.Commands"
					xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/SongPad;component/Resources/Templates/Button.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="WindowStyle" TargetType="{x:Type Window}">
		<Setter Property="WindowState" Value="Maximized" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="MinWidth" Value="300" />
		<Setter Property="MinHeight" Value="300" />
	</Style>
	
	<Style x:Key="BaseThumb" TargetType="{x:Type Thumb}">
		<Setter Property="Opacity" Value="0" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
				<Setter Property="Width" Value="0"/>
				<Setter Property="Height" Value="0"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="NSThumb" TargetType="{x:Type Thumb}" BasedOn="{StaticResource BaseThumb}">
		<Setter Property="Height" Value="6" />
		<Setter Property="Margin" Value="6,0" />
		<Setter Property="Cursor" Value="SizeNS" />
	</Style>

	<Style x:Key="WEThumb" TargetType="{x:Type Thumb}" BasedOn="{StaticResource BaseThumb}">
		<Setter Property="Width" Value="6" />
		<Setter Property="Margin" Value="0,6" />
		<Setter Property="Cursor" Value="SizeWE" />
	</Style>

	<Style x:Key="NWSEThumb" TargetType="{x:Type Thumb}" BasedOn="{StaticResource BaseThumb}">
		<Setter Property="Width" Value="6" />
		<Setter Property="Height" Value="6" />
		<Setter Property="Cursor" Value="SizeNWSE" />
	</Style>

	<Style x:Key="NESWThumb" TargetType="{x:Type Thumb}" BasedOn="{StaticResource BaseThumb}">
		<Setter Property="Width" Value="6" />
		<Setter Property="Height" Value="6" />
		<Setter Property="Cursor" Value="SizeNESW" />
	</Style>

	<commands:MaximizeCommand x:Key="MaximizeCommand" />
	<commands:MinimizeCommand x:Key="MinimizeCommand" />

	<ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
		<!-- TODO : check that weird behavior when resizing the window -->
		<!--<Grid Margin="6" Background="Red">
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Setter Property="Padding" Value="50"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
							<Setter Property="Padding" Value="50"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>-->
		<Border>
			<Border.Style>
				<Style TargetType="{x:Type Border}">
					<Setter Property="BorderThickness" Value="6"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
							<Setter Property="BorderThickness" Value="6"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Border.Style>
			<Grid>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" Background="{DynamicResource controlBackground}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						
						<Label Grid.Column="0"
							   behaviors:DoubleClickBehavior.ExecuteCommand="{Binding CloseCommand}">
							<Image Width="20" Height="20"
								   Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}"
								   behaviors:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
								   behaviors:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}" />
						</Label>

						<Label Grid.Column="1" Foreground="{DynamicResource foreground}"
							   VerticalContentAlignment="Center"
							   Content="{TemplateBinding Property=Title}"
							   behaviors:DoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
							   behaviors:DoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
							   behaviors:DragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
							   behaviors:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
							   behaviors:ShowSystemMenuBehavior.RightButtonShow="True" />
						
						<StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
							
							<Button Foreground="{DynamicResource foreground}" Width="34" Height="30"
									Template="{StaticResource WindowButton}"
									Content="{iconPacks:Material WindowMinimize, Width=8, Height=8}"
									Command="{StaticResource MinimizeCommand}"
									CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />

							<Button Foreground="{DynamicResource foreground}" Width="34" Height="30"
									Template="{StaticResource WindowButton}"
									Command="{StaticResource MaximizeCommand}"
									CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
								<Button.Style>
									<Style TargetType="{x:Type Button}">
										<Setter Property="Content" Value="{iconPacks:Material WindowMaximize, Width=8, Height=8}" />
										<Style.Triggers>
											<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
												<Setter Property="Content" Value="{iconPacks:Material WindowRestore, Width=8, Height=8}" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>

							<Button Foreground="{DynamicResource foreground}" Width="34" Height="30"
									Template="{StaticResource WindowButton}"
									Content="{iconPacks:Material WindowClose, Width=8, Height=8}"
									Command="{Binding CloseCommand}" />

						</StackPanel>
					</Grid>
					<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource borderColor}">
						<Grid Background="{DynamicResource workspaceBackground}">
							<AdornerDecorator>
								<ContentPresenter x:Name="WindowContent" />
							</AdornerDecorator>
						</Grid>
					</Border>
				</Grid>
				<Thumb x:Name="ThumbLeft" Style="{StaticResource WEThumb}" HorizontalAlignment="Left"
					   behaviors:ResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbTopLeft" Style="{StaticResource NWSEThumb}" HorizontalAlignment="Left" VerticalAlignment="Top"
					   behaviors:ResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbTop" Style="{StaticResource NSThumb}" VerticalAlignment="Top"
					   behaviors:ResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbTopRight" Style="{StaticResource NESWThumb}" HorizontalAlignment="Right" VerticalAlignment="Top"
					   behaviors:ResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbRight" Style="{StaticResource WEThumb}" HorizontalAlignment="Right"
					   behaviors:ResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbBottomRight" Style="{StaticResource NWSEThumb}" HorizontalAlignment="Right" VerticalAlignment="Bottom"
					   behaviors:ResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbBottom" Style="{StaticResource NSThumb}" VerticalAlignment="Bottom"
					   behaviors:ResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
				<Thumb x:Name="ThumbBottomLeft" Style="{StaticResource NESWThumb}" HorizontalAlignment="Left" VerticalAlignment="Bottom"
					   behaviors:ResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
			</Grid>
		</Border>
		<!-- Thumbs should be placed here -->
		<!--</Grid>-->
	</ControlTemplate>

</ResourceDictionary>